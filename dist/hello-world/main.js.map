{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/archive-list/archive-list.component.css","webpack:///./src/app/archive-list/archive-list.component.html","webpack:///./src/app/archive-list/archive-list.component.ts","webpack:///./src/app/archive/archive.component.css","webpack:///./src/app/archive/archive.component.html","webpack:///./src/app/archive/archive.component.ts","webpack:///./src/app/authors.service.ts","webpack:///./src/app/authors/authors.component.css","webpack:///./src/app/authors/authors.component.html","webpack:///./src/app/authors/authors.component.ts","webpack:///./src/app/changepassword-form/changepassword-form.component.css","webpack:///./src/app/changepassword-form/changepassword-form.component.html","webpack:///./src/app/changepassword-form/changepassword-form.component.ts","webpack:///./src/app/changepassword-form/changepassword-form.validators.ts","webpack:///./src/app/common/app-error-handler.ts","webpack:///./src/app/common/app-error.ts","webpack:///./src/app/common/bad-input.ts","webpack:///./src/app/common/not-found-error.ts","webpack:///./src/app/course/course.component.css","webpack:///./src/app/course/course.component.html","webpack:///./src/app/course/course.component.ts","webpack:///./src/app/courses-form/courses-form.component.css","webpack:///./src/app/courses-form/courses-form.component.html","webpack:///./src/app/courses-form/courses-form.component.ts","webpack:///./src/app/courses.service.ts","webpack:///./src/app/courses/courses.component.css","webpack:///./src/app/courses/courses.component.html","webpack:///./src/app/courses/courses.component.ts","webpack:///./src/app/followers/followers.component.css","webpack:///./src/app/followers/followers.component.html","webpack:///./src/app/followers/followers.component.ts","webpack:///./src/app/like/like.component.css","webpack:///./src/app/like/like.component.html","webpack:///./src/app/like/like.component.ts","webpack:///./src/app/not-found/not-found.component.css","webpack:///./src/app/not-found/not-found.component.html","webpack:///./src/app/not-found/not-found.component.ts","webpack:///./src/app/posts/posts.component.css","webpack:///./src/app/posts/posts.component.html","webpack:///./src/app/posts/posts.component.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/app/services/followers.service.ts","webpack:///./src/app/services/post.service.ts","webpack:///./src/app/signup-form/signup-form.component.css","webpack:///./src/app/signup-form/signup-form.component.html","webpack:///./src/app/signup-form/signup-form.component.ts","webpack:///./src/app/zippy/zippy.component.css","webpack:///./src/app/zippy/zippy.component.html","webpack:///./src/app/zippy/zippy.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"\\r\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\nimport { $ } from 'protractor';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'hello-world';\n\n  tweet = {\n      body: 'Here is the body of a tweet...',\n      isLiked: false,\n      likesCount: 0\n  }\n\n  onClick(event) {\n    this.tweet.isLiked = event.isActive;\n    this.tweet.likesCount = event.likesCount;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { NgModule, ErrorHandler } from '@angular/core';\r\nimport { AppErrorHandler } from './common/app-error-handler';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { CoursesService } from './courses.service';\r\nimport { AuthorsService } from './authors.service';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { CourseComponent } from './course/course.component';\r\nimport { CoursesComponent } from './courses/courses.component';\r\nimport { AuthorsComponent } from './authors/authors.component';\r\nimport { LikeComponent } from './like/like.component';\r\nimport { ZippyComponent } from './zippy/zippy.component';\r\nimport { CoursesFormComponent } from './courses-form/courses-form.component';\r\nimport { SignupFormComponent } from './signup-form/signup-form.component';\r\nimport { ChangePasswordFormComponent } from './changepassword-form/changepassword-form.component';\r\nimport { PostsComponent } from './posts/posts.component'\r\nimport { DataService } from './services/data.service';\r\nimport { PostService } from './services/post.service';\r\nimport { FollowersComponent } from './followers/followers.component';\r\nimport { FollowersService } from './services/followers.service';\r\nimport { ArchiveListComponent } from './archive-list/archive-list.component';\r\nimport { ArchiveComponent } from './archive/archive.component';\r\nimport { NotFoundComponent } from './not-found/not-found.component'; \r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CourseComponent,\r\n    CoursesComponent,\r\n    AuthorsComponent,\r\n    LikeComponent,\r\n    ZippyComponent,\r\n    CoursesFormComponent,\r\n    SignupFormComponent,\r\n    ChangePasswordFormComponent,\r\n    PostsComponent,\r\n    FollowersComponent,\r\n    ArchiveListComponent,\r\n    ArchiveComponent,\r\n    NotFoundComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule, \r\n    ReactiveFormsModule,\r\n    HttpModule,\r\n    RouterModule.forRoot([\r\n      { path: '', component: ArchiveListComponent },\r\n      { path: 'archive/:year/:month', component: ArchiveComponent },\r\n      { path: '**', component: NotFoundComponent }\r\n    ])\r\n  ],\r\n  providers: [\r\n    DataService,\r\n    PostService,\r\n    FollowersService,\r\n    CoursesService,\r\n    AuthorsService,\r\n    { provide: ErrorHandler, useClass: AppErrorHandler }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<h1>\\n  Home Page\\n</h1>\\n<ul>\\n  <li *ngFor=\\\"let archive of archiveLinks\\\">\\n       <a [routerLink]=\\\"['archive',archive.year,archive.month]\\\">{{archive.year}}/{{archive.month}}</a>\\n  </li>\\n</ul>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'archive-list',\n  templateUrl: './archive-list.component.html',\n  styleUrls: ['./archive-list.component.css']\n})\nexport class ArchiveListComponent {\n\n    archiveLinks = [{'year': '2017', 'month':'1'},{'year': '2017', 'month':'2'},{'year': '2017', 'month':'3'}];\n}\n","module.exports = \"\"","module.exports = \"<h1>\\n  Archive for {{year}} / {{month}}\\n</h1>\\n\\n<button class=\\\"btn\\\" routerLink=\\\"\\\">View all</button>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'archive',\n  templateUrl: './archive.component.html',\n  styleUrls: ['./archive.component.css']\n})\nexport class ArchiveComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute) { }\n  year: any;\n  month: any;\n\n  ngOnInit() {\n    this.route.paramMap\n      .subscribe(params => {\n        this.year = params.get('year')\n        this.month = params.get('month')\n      });\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorsService {\n\n  constructor() { }\n\n  authors = ['Jan Nowak', 'Zbigniew Ziobro', 'Roman Giertych'];\n\n  getAuthors() \n  {\n    return this.authors;\n  }\n}\n","module.exports = \"\"","module.exports = \"<h1>\\n  Authors\\n</h1>\\n<ol>\\n  <li *ngFor=\\\"let author of authors\\\">{{author}}</li>\\n</ol>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthorsService } from '../authors.service';\n\n@Component({\n  selector: 'app-authors',\n  templateUrl: './authors.component.html',\n  styleUrls: ['./authors.component.css']\n})\nexport class AuthorsComponent implements OnInit {\n\n  public authors : any;\n\n  constructor(authorsService: AuthorsService) {  \n    this.authors = authorsService.getAuthors();\n  }\n\n  ngOnInit() {\n  }\n}\n","module.exports = \"\"","module.exports = \"<form [formGroup]=\\\"form\\\">\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"oldpassword\\\">Old password</label>\\n        <input \\n            formControlName=\\\"oldpassword\\\"\\n            id=\\\"oldpassword\\\" \\n            type=\\\"text\\\" \\n            class=\\\"form-control\\\">\\n        <div *ngIf=\\\"oldpassword.touched && oldpassword.invalid\\\" class=\\\"aletrt alert-danger\\\">\\n            <div *ngIf=\\\"oldpassword.errors.required\\\">Old password is required.</div>\\n            <div *ngIf=\\\"oldpassword.errors.oldPasswordInvalid\\\">Old password is invalid.</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"newpassword\\\">New password</label>\\n        <input \\n            formControlName=\\\"newpassword\\\"\\n            id=\\\"newpassword\\\" \\n            type=\\\"text\\\" \\n            class=\\\"form-control\\\">\\n        <div *ngIf=\\\"newpassword.touched && newpassword.invalid\\\" class=\\\"aletrt alert-danger\\\">\\n            <div *ngIf=\\\"newpassword.errors.required\\\">New password is required.</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"confirmpassword\\\">Confirm password</label>\\n        <input \\n            formControlName=\\\"confirmpassword\\\"\\n            id=\\\"confirmpassword\\\" \\n            type=\\\"text\\\" \\n            class=\\\"form-control\\\">\\n        <div *ngIf=\\\"confirmpassword.touched && confirmpassword.invalid\\\" class=\\\"aletrt alert-danger\\\">\\n            <div *ngIf=\\\"confirmpassword.errors.required\\\">Confirm password is required.</div>\\n        </div>\\n    </div>\\n    <div *ngIf=\\\"confirmpassword.touched && newpassword.touched && form.errors\\\" class=\\\"aletrt alert-danger\\\">\\n        <div *ngIf=\\\"form.errors?.passwordNotMatch\\\">Passwords do not match.</div>\\n    </div>\\n<button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Change password</button>\\n</form>\"","import { Component } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms'\nimport { ChangePasswordFormValidators } from './changepassword-form.validators';\n\n@Component({\n  selector: 'changepassword-form',\n  templateUrl: './changepassword-form.component.html',\n  styleUrls: ['./changepassword-form.component.css']\n})\nexport class ChangePasswordFormComponent {\n  form: FormGroup;\n\n  constructor(fb : FormBuilder){\n    this.form = fb.group({\n      oldpassword: ['', Validators.required, ChangePasswordFormValidators.oldPasswordValidator],\n      newpassword: ['', Validators.required],\n      confirmpassword: ['', Validators.required],\n    },\n    {\n      validator: ChangePasswordFormValidators.passwordNotMatchValidator\n    });\n  }\n\n  get oldpassword() {\n    return this.form.get('oldpassword');\n  }\n\n  get newpassword() {\n    return this.form.get('newpassword');\n  }\n\n  get confirmpassword() {\n    return this.form.get('confirmpassword');\n  }\n}\n","import { AbstractControl, ValidationErrors } from \"@angular/Forms\";\r\n\r\nexport class ChangePasswordFormValidators{\r\n    static passwordNotMatchValidator(form: AbstractControl) : ValidationErrors | null {\r\n        const confirmPassword = form.get('confirmpassword');\r\n        const newPassword = form.get('newpassword');\r\n        return confirmPassword.value !== newPassword.value ? { 'passwordNotMatch': true } : null;\r\n    }\r\n\r\n    static oldPasswordValidator(control: AbstractControl) : Promise<ValidationErrors | null> {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                if((control.value as string) !== '1234') {\r\n                    resolve({ 'oldPasswordInvalid': true })\r\n                } else {\r\n                    resolve(null);\r\n                }\r\n            });\r\n        });\r\n    }\r\n}","import { ErrorHandler } from '@angular/core';\r\n\r\nexport class AppErrorHandler implements ErrorHandler {\r\n    handleError(error) {\r\n        alert('An unexpected error occurred.');\r\n        console.log(error);\r\n    }\r\n}","\r\nexport class AppError { \r\n    constructor(public originalError?: any) {}\r\n}\r\n","import { AppError } from './app-error';\r\n\r\nexport class BadInput extends AppError { }","import { AppError } from './app-error';\r\n\r\nexport class NotFoundError extends AppError {}\r\n","module.exports = \"\"","module.exports = \"<p>\\n  course works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-course',\n  templateUrl: './course.component.html',\n  styleUrls: ['./course.component.css']\n})\nexport class CourseComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"form{\\r\\n    margin: 50px;\\r\\n}\"","module.exports = \"<form #f=\\\"ngForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"name\\\">Course Name</label>\\n    <input \\n      required\\n      minlength=\\\"5\\\"\\n      ngModel\\n      id=\\\"name\\\"\\n      name=\\\"name\\\"\\n      #name=\\\"ngModel\\\" \\n      type=\\\"text\\\" \\n      class=\\\"form-control\\\">\\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"name.touched && !name.valid\\\">\\n        <div *ngIf=\\\"name.errors.required\\\">Course Name is required!</div>\\n        <div *ngIf=\\\"name.errors.minlength\\\">Course Name should be minimum {{ name.errors.minlength.requiredLength }} characters!</div>\\n      </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"category\\\">Category</label>\\n    <select \\n      required\\n      ngModel\\n      name=\\\"category\\\"\\n      id=\\\"category\\\"\\n      #category=\\\"ngModel\\\" \\n      class=\\\"form-control\\\">\\n      <option value=\\\"\\\"></option>\\n      <option *ngFor=\\\"let cat of categories\\\"  [value]=\\\"cat.id\\\">{{ cat.name }}</option>\\n    </select>\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"category.touched && !category.valid\\\">\\n      <div *ngIf=\\\"category.errors.required\\\">Category is required!</div>\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n      <div class=\\\"checkbox\\\">\\n      <input \\n        id=\\\"hasGuarantee\\\"\\n        name=\\\"hasGuarantee\\\"\\n        #hasGuarantee=\\\"ngModel\\\"\\n        type=\\\"checkbox\\\"\\n        ngModel\\n        >\\n        <label for=\\\"hasGuarantee\\\">30-day money-back guarantee</label>\\n      </div>\\n    </div>\\n    <p>\\n      {{ f.value | json }}\\n    </p>\\n  <button class=\\\"btn btn-primary\\\" [disabled]=\\\"f.invalid\\\">Create</button>\\n</form>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'courses-form',\n  templateUrl: './courses-form.component.html',\n  styleUrls: ['./courses-form.component.css']\n})\nexport class CoursesFormComponent {\n  \n  categories = [\n    { id: 1, name: 'Development' },\n    { id: 2, name: 'Art' },\n    { id: 3, name: 'Languages' }\n  ];\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CoursesService {\n\n  constructor() { }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  courses works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-courses',\n  templateUrl: './courses.component.html',\n  styleUrls: ['./courses.component.css']\n})\nexport class CoursesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".avatar {\\r\\n    width: 80px;\\r\\n    height: 80px;\\r\\n    border-radius: 100%;\\r\\n}\"","module.exports = \"<h1>My followers</h1>\\r\\n<div *ngFor=\\\"let follower of followers\\\" class=\\\"media\\\">\\r\\n  <div class=\\\"media-left\\\">\\r\\n    <img class=\\\"media-object avatar\\\" src=\\\"{{follower.avatar_url}}\\\" alt=\\\"Generic placeholder image\\\">\\r\\n  </div>\\r\\n  <div class=\\\"media-body\\\">\\r\\n    <h4 class=\\\"media-heading\\\">{{follower.login}}</h4>\\r\\n    <p><a href=\\\"{{follower.html_url}}\\\">{{follower.html_url}}</a></p>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FollowersService } from '../services/followers.service';\r\n\r\n@Component({\r\n  selector: 'followers',\r\n  templateUrl: './followers.component.html',\r\n  styleUrls: ['./followers.component.css']\r\n})\r\nexport class FollowersComponent implements OnInit {\r\n  followers: any[];\r\n\r\n  constructor(private service: FollowersService) { }\r\n\r\n  ngOnInit() {\r\n    this.service.getAll().subscribe(followers => this.followers = followers);\r\n  }\r\n\r\n}\r\n","module.exports = \"h2 {\\r\\n    padding: 30px;\\r\\n}\\r\\nspan {\\r\\n    color: #ccc;\\r\\n    cursor: pointer;\\r\\n}\\r\\nspan.isLiked {\\r\\n    color: deeppink;\\r\\n}\"","module.exports = \"<h2>\\n  <span class=\\\"glyphicon glyphicon-heart\\\" [class.isLiked]=\\\"isActive\\\" (click)=\\\"onClicked()\\\"></span>  {{likesCount}}\\n</h2>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'like',\n  templateUrl: './like.component.html',\n  styleUrls: ['./like.component.css']\n})\nexport class LikeComponent implements OnInit {\n\n  constructor() { }\n\n  @Input()  isActive : boolean;\n  @Input()  likesCount: number;\n  @Output()  change = new EventEmitter();\n\n  onClicked()\n  {\n    this.isActive = !this.isActive;\n    if(this.isActive) {\n      this.likesCount++;\n    }\n    else {\n      this.likesCount--;\n    }\n\n    this.change.emit({ isActive: this.isActive, likesCount: this.likesCount});\n  }\n\n  ngOnInit() {\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  not-found works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<input \\r\\n  (keyup.enter)=\\\"createPost(title)\\\" #title\\r\\n  type=\\\"text\\\" class=\\\"form-control\\\">\\r\\n<ul class=\\\"list-group\\\">\\r\\n  <li \\r\\n    *ngFor=\\\"let post of posts\\\"\\r\\n    class=\\\"list-group-item\\\">\\r\\n    <button \\r\\n      (click)=\\\"deletePost(post)\\\"\\r\\n      class=\\\"btn btn-default btn-sm\\\">Delete</button>\\r\\n    {{ post.title }}\\r\\n  </li>\\r\\n</ul>\"","import { NotFoundError } from './../common/not-found-error';\r\nimport { BadInput } from './../common/bad-input';\r\nimport { AppError } from './../common/app-error';\r\nimport { PostService } from './../services/post.service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'posts',\r\n  templateUrl: './posts.component.html',\r\n  styleUrls: ['./posts.component.css']\r\n})\r\nexport class PostsComponent implements OnInit {\r\n  posts: any[];\r\n\r\n  constructor(private service: PostService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.service.getAll()\r\n      .subscribe(posts => this.posts = posts);\r\n  }\r\n\r\n  createPost(input: HTMLInputElement) {\r\n    let post = { title: input.value };\r\n    input.value = '';\r\n\r\n    this.service.create(post)\r\n      .subscribe(\r\n        newPost => {\r\n          post['id'] = newPost.id;\r\n            this.posts.splice(0, 0, post);\r\n          },\r\n          (error: AppError) => {\r\n            if (error instanceof BadInput) {\r\n              // this.form.setErrors(error.originalError);\r\n            }\r\n            else throw error;\r\n          });\r\n  }\r\n\r\n  updatePost(post) {\r\n    this.service.update(post)\r\n      .subscribe(\r\n        updatedPost => {\r\n          console.log(updatedPost);\r\n        });\r\n  }\r\n\r\n  deletePost(post) {\r\n    this.service.delete(post.id)\r\n      .subscribe(\r\n        () => {\r\n          let index = this.posts.indexOf(post);\r\n          this.posts.splice(index, 1);\r\n        },\r\n        (error: AppError) => {\r\n          if (error instanceof NotFoundError)\r\n            alert('This post has already been deleted.');\r\n          else throw error;\r\n        });\r\n  }\r\n}\r\n","import { BadInput } from './../common/bad-input';\r\nimport { NotFoundError } from './../common/not-found-error';\r\nimport { AppError } from './../common/app-error';\r\nimport { Http } from '@angular/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport 'rxjs/add/observable/throw';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n  constructor(private url: string, private http: Http) { }\r\n\r\n  getAll() {\r\n    return this.http.get(this.url)\r\n      .map(response => response.json())\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  get(id) { \r\n    return this.http.get(this.url + '/' + id)\r\n      .map(response => response.json())\r\n      .catch(this.handleError);    \r\n  }\r\n\r\n  create(resource) {\r\n    return this.http.post(this.url, JSON.stringify(resource))\r\n      .map(response => response.json())\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  update(resource) {\r\n    return this.http.patch(this.url + '/' + resource.id, JSON.stringify({ isRead: true }))\r\n      .map(response => response.json())      \r\n      .catch(this.handleError);\r\n  }\r\n\r\n  delete(id) {\r\n    return this.http.delete(this.url + '/' + id)\r\n      .map(response => response.json())\r\n     // .toPromise()\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  private handleError(error: Response) {\r\n    if (error.status === 400)\r\n      return Observable.throw(new BadInput(error.json()));\r\n  \r\n    if (error.status === 404)\r\n      return Observable.throw(new NotFoundError());\r\n    \r\n    return Observable.throw(new AppError(error));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DataService } from './data.service';\r\nimport { Http } from '@angular/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FollowersService extends DataService {\r\n\r\n  constructor(http: Http) {\r\n    super('https://api.github.com/users/mosh-hamedani/followers', http);\r\n  }\r\n}\r\n","import { DataService } from './data.service';\r\nimport { Http } from '@angular/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class PostService extends DataService {\r\n  constructor(http: Http) {\r\n    super('http://jsonplaceholder.typicode.com/posts', http);\r\n   }\r\n}\r\n","module.exports = \"\"","module.exports = \"<form [formGroup]=\\\"form\\\">\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"username\\\">Username</label>\\n        <input \\n            formControlName=\\\"username\\\"\\n            id=\\\"username\\\" \\n            type=\\\"text\\\" \\n            class=\\\"form-control\\\">\\n        <div *ngIf=\\\"username.touched && username.invalid\\\" class=\\\"aletrt alert-danger\\\">\\n            <div *ngIf=\\\"username.errors.required\\\">Username is required</div>\\n            <div *ngIf=\\\"username.errors.minlength\\\">Username should be minimum {{ username.errors.minlength.requiredLength }} characters</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input \\n            formControlName=\\\"password\\\"\\n            id=\\\"password\\\" \\n            type=\\\"text\\\" \\n            class=\\\"form-control\\\">\\n    </div>\\n    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Sign Up</button>\\n</form>\"","import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms'\n\n@Component({\n  selector: 'signup-form',\n  templateUrl: './signup-form.component.html',\n  styleUrls: ['./signup-form.component.css']\n})\nexport class SignupFormComponent {\n  form = new FormGroup({\n    username: new FormControl('',[\n      Validators.required,\n      Validators.minLength(3)\n    ]),\n    password: new FormControl('', Validators.required) \n  });\n\n  get username() {\n    return this.form.get('username');\n  }\n}\n","module.exports = \".panel-group {\\r\\n    margin: 0px 20px 0px 50px;\\r\\n    width: 300px;\\r\\n    font-size: 20px;\\r\\n}\\r\\n.panel-heading {\\r\\n    width: 100%;\\r\\n    position: relative;\\r\\n    font-weight: bold;\\r\\n}\\r\\nspan{\\r\\n    position: absolute;\\r\\n    top: 15px;\\r\\n    right: 20px;\\r\\n}\"","module.exports = \"<div class=\\\"panel-group\\\">\\n  <div class=\\\"panel panel-default\\\">\\n    <div class=\\\"panel-heading\\\"\\n    (click)=\\\"onClick()\\\"\\n    [ngStyle]=\\\"{'backgroundColor': !unfolded ? '#fff' : ''}\\\">\\n    <span class=\\\"glyphicon\\\"\\n    [ngClass]=\\\"{\\n      'glyphicon-chevron-up': unfolded,\\n      'glyphicon-chevron-down': !unfolded\\n    }\\\"\\n    ></span>{{title}}</div>\\n    <div class=\\\"panel-body\\\" *ngIf=\\\"unfolded\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'zippy',\n  templateUrl: './zippy.component.html',\n  styleUrls: ['./zippy.component.css']\n})\nexport class ZippyComponent {\n\n  constructor() { }\n\n  unfolded = false;\n  @Input('title')\n  title = \"test title\";\n\n  onClick() {\n    this.unfolded  = !this.unfolded;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}